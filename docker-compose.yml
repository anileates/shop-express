# docker-compose config
# docker-compose up -d
# docker-compose down

version: '3.9'

services:
  # MongoDB service
  my_sql:
    image: mysql:latest
    container_name: my_sql
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - 3306:3306
    volumes: 
      - my_sql:/data/db
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MY_SQL_USER: root
  
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - 6379:6379
    volumes: 
      - redis:/data/db


  # NodeJS API service
  api:
    build: . # Relative path of .dockerfile of API
    ports:
      - 3000:3000
    environment:
      - PORT= 3000
    depends_on: # This container (api) depends on mongo_db container. So, mongo_db container will be started first.
      - my_sql
      - redis

volumes:
  my_sql: {}
  redis: {}